//////////
// LOGO
.logo {
    height: 3.25rem;
    margin-left: 2rem;

}

//////////
// SEARCH

.search {
    flex: 0 0 40%;
    display: flex;
    justify-content: center;
    align-items: center;

    &__input {
    
    // font-family and size are not inherited by default.
    font-family: inherit;
    font-size: inherit;
    background-color: var(--color-grey-light-2);
    color: inherit;
    padding: .7rem 2rem;
    border-radius: 100px;
    transition: all .2s ;
    margin-right: -3.5rem;
    border: none;  
    width: 90%; 
    

    &:focus {
        outline: none;
        width: 100%;
        background-color: var(--color-grey-light-3);
    }
    &::-webkit-input-placeholder {
        font-weight: 100;
        color: var(--color-grey-light-4)
    }
}

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }
        &:active {
            transform: translateY(2px);
        }
    }
    // how to control svg size? By setting their heigth and width
    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3)

    }

}

//////////
// USER NAV
.user-nav {
    display: flex;
    align-items: center;
    /* we use align-self to control a hight of element, 
    and override a default hight which is taken from the highest element in group.
    */
    align-self: stretch;

    & > * {
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
        display: flex;
        align-items: center;
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }
    &__icon-box {
        display: flex;
        align-items: center;
        position: relative;


    }
    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-3);

    }
    &__notification {
        font-size: .8rem;
        width: 1.75rem;
        height: 1.75rem;
        border-radius: 50%;
        color: #ffffff;
        background-color: var(--color-primary-light);
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;
        // we can use display flex for text layout
        display: flex;
        justify-content: center;
        align-items: center;

    }

    &__user-photo {
        height: 3.25rem;
        border-radius: 50%;
        margin-right: 1rem;

    }
}

//////////
// SIDE NAVIGATION

.side-nav {
    list-style: none;
    font-size: 1.4rem;
    margin-top: 3rem;
    
    &__item {
        position: relative;
        &:not(:last-child) {
            margin-bottom: .5rem;
        }
       
    }
    &__item::before {
        content:"";
        position: absolute;
        top:0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        // color changing efect strart from center becouse transform-origin is center as a default;
        transform: scaleY(0);
        transition: transform .1s, 
                    width .4s cubic-bezier(1, 0, 0, 1) .2s, 
                    background-color .1s;
    }

    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before {
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        color: var(--color-grey-light-1);
        // z-index works only if we have specified position;
        position: relative;
        z-index: 10;

        display: flex;
        align-items: center;
    }
  
    &__icon {
        // resize icons
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        // fill with currentColor inherit color from its parent or current element
        fill: currentColor;
    }

}

//////////
// LEGAL TEXT
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    padding: 2rem;
    text-align: center;
}

/////////////
// HOTEL VIEW
.gallery {
    display: flex;
    &__item {

    }
    &__photo {
        // For responsive photo we always need to set width of height for element
        width: 100%;
        // We set display block for ride of space udeneef what happen when we leave display inline as a default.
        display: block;
    }
}

///////////
// OVERVIEW
.overview {
    display: flex;
    border-bottom: 1px solid var(--color-grey-light-2); 
    align-items: center;

    &__header {
        //big text but small font weight
        font-size: 2.5rem;
        font-weight: 300;

        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;
    }

    &__stars {
        //flex: 1;
        //leave space on one side. Margin will ocupy all avaliable space
        margin-right: auto;
        /*override default property of svg element which is display: inline. 
        We want elements have got a height of their height so we set display  
        flex, and the heigit of the box will be from the highest element inside the box */
        display: flex;
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary)
    }

    &__location {
        display: flex;
        align-items: center;
        font-size: 1.2rem;
    }

    &__icon-location {
        margin-right: 1rem;
    }
    &__ratings {
        background-color: var(--color-primary);
        justify-content: center;
        align-items: center;
        margin-left: 3rem;
        color: #fff;
        padding: 0 2.5rem;

        display: flex;
        flex-direction: column;
        align-self: stretch;
    }
    &__ratings-average {
        font-size: 2.25rem;
        font-weight: 300;
         margin-bottom: -3px;
    }
    &__ratings-count {
        font-size: .8rem;
        text-transform: uppercase;
    }
}

//////////////
// INLINE BUTTON
.btn-inline {
    border: none;
    color: var(--color-primary);
    border-bottom: 1px solid currentColor;
    font-size: inherit;
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    &:hover {
        color: var(--color-grey-dark-1);
    }

    &:focus {
        outline: none;
        animation: pulsate .1s infinite;
    }
}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 2rem 4rem rgba(0,0,0,.25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}