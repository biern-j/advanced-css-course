.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    font-family: inherit; /*input doesn't have specify font family. It browser change. So we need to specify for input the font family directly*/
    color: inherit; /*font color is not inherit*/
    padding: 1.5rem 2rem;
    border: none;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border-bottom: 3px solid transparent;
    width: 100%;
    transition: all 0.3s;
    &::-webkit-input-placeholder {
      color: $color-gray-dark2;
    }
    &:focus {
      outline: none; /*never left input without pointing which input box is active. You can replace default outline style by box shadow amd border-bottom: ; property */
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;
    }
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem; /*2rem because we want it in the same position what is the placeholder in input place*/
    margin-top: 0.7rem;
    display: block; /*with out display: block we can't set properties which manipulating width or height */
    transition: all 0.3s;
  }

  &__input:placeholder-shown + &__label {
    /*if placeholder is focused we want see nothing in side input. In this case we don't want see label in side input*/
    opacity: 0;
    visibility: hidden; /*it really gone. If we left only opacity: 0; the element will be still on the page, but only invisible. So with visibility: hidden it really gone. So why don't use just visibility property? Because visibility property isn't animate, but we want animate the effect with this placeholder by transition.*/
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block;
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 5rem;
  }

  &__radio-button {
    width: 3rem;
    height: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block; /*inline-block is better option that only block, because all elements want to occupy whole line */
    position: absolute;
    top: 0;
    left: -0.4rem;

    &::after {
      content: "";
      display: block;
      width: 1.3rem;
      height: 1.3rem;
      border-radius: 50%;
      position: absolute; /*parent for position absolute doesn't have to be relative, it just need to be specified in the parent element*/
      top: 50%;
      left: 50%; /*because we want this element in the middle */
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: all 0.2s;
    }
  }
  &__radio-input:checked ~ &__radio-label > &__radio-button::after {
    opacity: 1;
  }
}
