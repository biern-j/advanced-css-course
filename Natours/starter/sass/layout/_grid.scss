.row {
    // if we have enought space than use this specified paramentr. If view port is smaller than specified width than width user 100% of awaliable space
    max-width: $grid-width;
    // center block element in side other block elements
    margin: 0 auto; // auto margin on the left and the right side which will be de same

    @include respond(tab-port){
        max-width: 50rem;
        padding: 0 3rem;
    }

    // eferything with out last child
    &:not(:last-child) { 
        margin-bottom: $gutter-vertical;
        @include respond(tab-port){
            margin-bottom: $gutter-vertical-small;
        }
    }
    @include clearfix;

    // attribute selector class^ get all class with name begines with "col-"
    [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;

            @include respond(tab-port){
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }
        @include respond(tab-port){
            width: 100% !important;
        }
    }
    // caclulate with calc() math function. We can mix units
    // calculate width of call:(row-witdh - gutter-vertical) / 2
    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }
    .col-1-of-3 { 
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }
    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }
    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }
    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }
    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
}
